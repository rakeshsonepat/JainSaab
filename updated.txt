*  DATA : members LIKE xkomv.
  LOOP AT  xkomv ASSIGNING FIELD-SYMBOL(<ls_xkomv>) WHERE kschl NE space
                                                    GROUP BY ( kschl = <ls_xkomv>-kschl  )
                                                    ASSIGNING FIELD-SYMBOL(<lfs_group>).
      LOOP AT GROUP <lfs_group> ASSIGNING FIELD-SYMBOL(<lfs_kschl_group>).
*    CLEAR members.
*      members = VALUE #( BASE members ( <lfs_kschl_group> ) ).
    READ TABLE t_condtypes ASSIGNING FIELD-SYMBOL(<ls_condtype>) WITH KEY kschl = <lfs_group>-kschl BINARY SEARCH.

*    IF sy-subrc = 0 AND ( <ls_condtype>-zmfcurr = 'yes' OR <lfs_group>-krech = 'A' ).
*      CLEAR: lv_kbetr, lv_xkawrt, lv_arbfeld.
*      CASE <lfs_group>-krech.
*        WHEN 'A' .   "percentage
*          lv_xkawrt = REDUCE kawrt( INIT lv_cbv TYPE kawrt
*                                         FOR  <ls_stunr> IN xkomv WHERE ( stunr =  <lfs_group>-stunb )
*                                         NEXT lv_cbv = lv_cbv + <ls_stunr>-kbetr ).
*
*          lv_arbfeld = ( lv_xkawrt * <lfs_group>-kbetr ).
*          lv_kbetr = lv_arbfeld / 100000.
*        WHEN OTHERS .
*
**            lv_kbetr = REDUCE kbetr( INIT lv_amt TYPE kbetr
**                                     FOR  <ls_amt> IN <lfs_group> WHERE ( kschl =  <lfs_kschl_group>-stunb )
**                                           NEXT lv_cbv = lv_cbv + <ls_amt>-kbetr ).
*
*            lv_kbetr = lv_kbetr + <lfs_kschl_group>-kbetr.
*
*      ENDCASE.
*      APPEND VALUE #( kschl = <lfs_group>-kschl
**                          stunr = <ls_xkomv>-stunr
*                              kbetr = lv_kbetr ) TO lt_amount.
*    ENDIF.
       ENDLOOP.
  ENDLOOP.


CLEAR ls_amount.
cl_demo_output=>display( lt_amount ).